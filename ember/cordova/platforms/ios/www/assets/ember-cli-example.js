eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"ember-cli-example/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    //uncomment to use default rest adapter\n    // export default DS.RESTAdapter.extend({\n    // 	host: EmberCliExampleENV.serverHost\n    // });\n\n    //uncomment to use IndexedDB\n    // export default DS.IndexedDBAdapter.extend({\n    // 	databaseName: \'example_db\',\n    // 	version: 2,\n    // 	migrations: function() {\n    // 		//use the default id provided by backend\n    // 		this.addModel(\'agent\');\n    // 		//This is required if you use IndexedDB becuase it is not auto-generated.\n    // 		this.addModel(\'ember-sync-queue-model\', {keyPath: \'id\', autoIncrement: true});\n    // 	}\n    // });\n\n    //uncomment to use LocalStorage\n    __exports__[\"default\"] = DS.LSAdapter.extend({\n        namespace: \'ember-example\'\n    });\n  });//# sourceURL=ember-cli-example/adapters/application.js");

;eval("define(\"ember-cli-example/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'ember-cli-example\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'ember-cli-example\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ember-cli-example/app.js");

;eval("define(\"ember-cli-example/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"hash\",\"serverHost\":\"http://192.168.1.109:3000\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true},\"cordova\":{\"rebuildOnChange\":false,\"rebuildAsync\":false,\"emulate\":false}};\n  });//# sourceURL=ember-cli-example/config/environment.js");

;eval("define(\"ember-cli-example/controllers/agents\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    });\n  });//# sourceURL=ember-cli-example/controllers/agents.js");

;eval("define(\"ember-cli-example/initializers/ember-sync\", \n  [\"ember-sync\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var EmberSync = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'ember-sync\',\n\n      initialize: function(container, application) {\n        container.register(\"lib:emberSync\", EmberSync);\n        container.register(\'model:ember-sync-queue-model\', EmberSync.create().get(\'queueModel\'));\n\n        application.inject(\'route\', \'emberSync\', \"lib:emberSync\");\n        application.inject(\'controller\', \'emberSync\', \"lib:emberSync\");\n      }\n    };\n  });//# sourceURL=ember-cli-example/initializers/ember-sync.js");

;eval("define(\"ember-cli-example/initializers/online-store\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // app/initializers/online-store.js\n    var DS = __dependency1__[\"default\"];\n\n    var CustomOnlineSerializer = DS.ActiveModelSerializer.extend();\n\n    var CustomOnlineAdapter = DS.ActiveModelAdapter.extend({\n    	host: EmberCliExampleENV.serverHost, //make this your backend in config/environment.js\n    	serializer: CustomOnlineSerializer.create(),\n     	// namespace: \'/api/v1\' // your server namespace if you have one\n    });\n\n    // var OnlineStore = Ep.Session.extend({\n    var OnlineStore = DS.Store.extend({\n    	adapterFor: function(type) {\n    		return this.container.lookup(\'adapter:_custom_store\');\n    	},\n\n    	serializerFor: function(type) {\n    		return this.container.lookup(\'serializer:_custom_store\');\n    	}\n    });\n\n    __exports__[\"default\"] = {\n    	name: \"onlineStore\",\n\n    	initialize: function(container, application) {\n    		CustomOnlineSerializer.reopen({ container: container });\n\n    		container.register(\'store:online\', OnlineStore);\n    		container.register(\'adapter:_custom_store\', CustomOnlineAdapter);\n    		container.register(\'serializer:_custom_store\', CustomOnlineSerializer);\n\n    		application.inject(\'route\',      \'onlineStore\', \'store:online\');\n    		application.inject(\'controller\', \'onlineStore\', \'store:online\');\n    	}\n    };\n  });//# sourceURL=ember-cli-example/initializers/online-store.js");

;eval("define(\"ember-cli-example/models/agent\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    __exports__[\"default\"] = DS.Model.extend({\n    	first_name: DS.attr(\'string\'),\n    	last_name: DS.attr(\'string\')\n    });\n  });//# sourceURL=ember-cli-example/models/agent.js");

;eval("define(\"ember-cli-example/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: EmberCliExampleENV.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'agents\');\n      this.route(\'application\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=ember-cli-example/router.js");

;eval("define(\"ember-cli-example/routes/agents\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	title: \"Agents\",\n\n    	model: function(){\n    		// Several request types provided for reference\n\n    		//ember SYNC\n    		return this.emberSync.findQuery(\'agent\');\n\n    		//EPF\n    		// return this.session.query(\'agent\');\n\n    		//ember data\n    		// return this.store.findQuery(\'agent\');\n\n    		//inline fixture\n    		// return [{\'first_name\':\'john\', \'last_name\':\'smith\'}];\n    	}\n    });\n  });//# sourceURL=ember-cli-example/routes/agents.js");

;eval("define(\"ember-cli-example/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // app/routes/application.js\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	init: function() {\n    		this._super();\n\n    		this.emberSync.set(\'offlineStore\', this.store);\n    		this.emberSync.set(\'onlineStore\',  this.onlineStore);\n    		this.emberSync.synchronizeOnline();\n    	}\n    });\n  });//# sourceURL=ember-cli-example/routes/application.js");

;eval("define(\"ember-cli-example/serializers/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    //uncomment thses to choose REST, IndexedDB, or LocalStorage\n    // export default DS.RESTSerializer.extend({});\n    // export default DS.IndexedDBSerializer.extend({});\n    __exports__[\"default\"] = DS.LSSerializer.extend({});\n  });//# sourceURL=ember-cli-example/serializers/application.js");

;eval("define(\"ember-cli-example/templates/agents\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\": \");\n      stack1 = helpers._triageMustache.call(depth0, \"first_name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"last_name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h2>Agents</h2>\\n\\n<div>\\n\");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"controller\"),\n        \'height\': (500),\n        \'rowHeight\': (50),\n        \'width\': (500)\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"INTEGER\",\'width\': \"INTEGER\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-example/templates/agents.js");

;eval("define(\"ember-cli-example/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1 id=\'title\'>Ember CLI Offline Storage Testbench</h1>\\n\\n<nav>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Home\", \"application\", options) : helperMissing.call(depth0, \"link-to\", \"Home\", \"application\", options))));\n      data.buffer.push(\" | \");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Agents\", \"agents\", options) : helperMissing.call(depth0, \"link-to\", \"Agents\", \"agents\", options))));\n      data.buffer.push(\"\\n</nav>\\n\\n<hr>\\n\\n<div id=\\\"content\\\">\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-cli-example/templates/application.js");

;eval("define(\"ember-cli-example/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h2>Welcome</h2>\\n\\n<p>Try loading the Agents data from your backend at http://localhost:3000 and verifying it is in the IndexedDB</p>\\n\\n<p>If that works, reload the app at the root, turn off the back end, and navigate to Agents. The data should be pulled from the browsers IndexedDB</p>\\n\\n<p>Lastly, build for Cordova and test on your favoriate mobile device</p>\\n\");\n      \n    });\n  });//# sourceURL=ember-cli-example/templates/index.js");

;eval("define(\"ember-cli-example/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/adapters/application.jshint.js");

;eval("define(\"ember-cli-example/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/app.jshint.js");

;eval("define(\"ember-cli-example/tests/controllers/agents.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/agents.js should pass jshint\', function() { \n      ok(true, \'controllers/agents.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/controllers/agents.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/helpers\');\n    test(\'ember-cli-example/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/helpers/resolver.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/helpers\');\n    test(\'ember-cli-example/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/helpers/start-app.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests\');\n    test(\'ember-cli-example/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/test-helper.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/unit/adapters\');\n    test(\'ember-cli-example/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/unit/controllers/agents-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/unit/controllers\');\n    test(\'ember-cli-example/tests/unit/controllers/agents-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/unit/controllers/agents-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/unit/controllers/agents-test.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/unit/models/agent-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/unit/models\');\n    test(\'ember-cli-example/tests/unit/models/agent-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/unit/models/agent-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/unit/models/agent-test.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/unit/routes/agents-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/unit/routes\');\n    test(\'ember-cli-example/tests/unit/routes/agents-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/unit/routes/agents-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/unit/routes/agents-test.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/unit/routes\');\n    test(\'ember-cli-example/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/unit/routes/application-test.jshint.js");

;eval("define(\"ember-cli-example/tests/ember-cli-example/tests/unit/serializers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-example/tests/unit/serializers\');\n    test(\'ember-cli-example/tests/unit/serializers/application-test.js should pass jshint\', function() { \n      ok(true, \'ember-cli-example/tests/unit/serializers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/ember-cli-example/tests/unit/serializers/application-test.jshint.js");

;eval("define(\"ember-cli-example/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'ember-cli-example\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ember-cli-example/tests/helpers/resolver.js");

;eval("define(\"ember-cli-example/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'ember-cli-example/app\')[\'default\'];\n    var Router = require(\'ember-cli-example/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION: false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=ember-cli-example/tests/helpers/start-app.js");

;eval("define(\"ember-cli-example/tests/initializers/online-store.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - initializers\');\n    test(\'initializers/online-store.js should pass jshint\', function() { \n      ok(true, \'initializers/online-store.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/initializers/online-store.jshint.js");

;eval("define(\"ember-cli-example/tests/models/agent.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/agent.js should pass jshint\', function() { \n      ok(true, \'models/agent.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/models/agent.jshint.js");

;eval("define(\"ember-cli-example/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/router.jshint.js");

;eval("define(\"ember-cli-example/tests/routes/agents.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/agents.js should pass jshint\', function() { \n      ok(true, \'routes/agents.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/routes/agents.jshint.js");

;eval("define(\"ember-cli-example/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/routes/application.jshint.js");

;eval("define(\"ember-cli-example/tests/serializers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - serializers\');\n    test(\'serializers/application.js should pass jshint\', function() { \n      ok(true, \'serializers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-cli-example/tests/serializers/application.jshint.js");

;eval("define(\"ember-cli-example/tests/test-helper\", \n  [\"ember-cli-example/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=ember-cli-example/tests/test-helper.js");

;eval("define(\"ember-cli-example/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=ember-cli-example/tests/unit/adapters/application-test.js");

;eval("define(\"ember-cli-example/tests/unit/controllers/agents-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:agents\', \'AgentsController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=ember-cli-example/tests/unit/controllers/agents-test.js");

;eval("define(\"ember-cli-example/tests/unit/models/agent-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n\n    moduleForModel(\'agent\', \'Agent\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(model);\n    });\n  });//# sourceURL=ember-cli-example/tests/unit/models/agent-test.js");

;eval("define(\"ember-cli-example/tests/unit/routes/agents-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:agents\', \'AgentsRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=ember-cli-example/tests/unit/routes/agents-test.js");

;eval("define(\"ember-cli-example/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=ember-cli-example/tests/unit/routes/application-test.js");

;eval("define(\"ember-cli-example/tests/unit/serializers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'serializer:application\', \'ApplicationSerializer\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var serializer = this.subject();\n      ok(serializer);\n    });\n  });//# sourceURL=ember-cli-example/tests/unit/serializers/application-test.js");
